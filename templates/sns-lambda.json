{
  "Parameters": {
    "SlackWebhook":  { "Type": "String", "Default": ""  },
    "CodeRepoUrl":   { "Type": "String", "Default": "" },
    "ComputeType":   { "Type": "String", "Default": "BUILD_GENERAL1_SMALL" },
    "ProjectName":   { "Type": "String", "Default": "" }
  },
  "Resources" : {
    "LambdaIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [ {
          "PolicyName": { "Fn::Join": [ "", [ "lambda-", { "Ref": "ProjectName" }, "-github-role-policy"]]},
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              },
              {
                "Action": [
                  "codebuild:StartBuild",
                  "codebuild:StopBuild",
                  "codebuild:BatchGet*",
                  "codebuild:Get*",
                  "codebuild:List*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "logs:GetLogEvents"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*"
              }
            ]
          }
        } ],
        "Path": "/",
        "RoleName": { "Fn::Join": [ "", [ "lambda-", { "Ref": "ProjectName" }, "-github-role"]]}
      }
    },
    "LambdaGitSNS": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "TopicName" : { "Fn::Join": [ "", [ "lambda-", { "Ref": "ProjectName" }, "-git"]]},
        "Subscription": [ {
          "Endpoint": {
            "Fn::GetAtt": [ "GithubLambdaFunction", "Arn" ]
          },
          "Protocol": "lambda"
        } ]
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": { "Ref": "LambdaGitSNS" },
        "FunctionName": {
          "Fn::GetAtt": [ "GithubLambdaFunction", "Arn" ]
        }
      }
    },
    "GithubLambdaFunction": {
      "Type" : "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile" : { "Fn::Join" : ["\n", [
            "from __future__ import print_function",
            "import boto3",
            "import json",
            "print('Loading function')",
            "client = boto3.client('codebuild')",
            "def lambda_handler(event, context):",
            "    message = event['Records'][0]['Sns']['Message']",
            "    print('From SNS: ' + message)",
            "    parsed = json.loads(message)",
            "    pieces = parsed['ref'].split('/')",
            "    pieces.pop(0)",
            "    pieces.pop(0)",
            "    branch = '/'.join(pieces)",
            "    commit = parsed['after']",
            "    short = commit[0:7]",
            "    repo = parsed['repository']['name']",
            "    print('Branch: ' + branch)",
            "    print('Commit: ' + commit)",
            "    print('Short: ' + short)",
            "    print('Repo: ' + repo)",
            "    if commit == '0000000000000000000000000000000000000000':",
            "        print('Nothing to Build')",
            "        return True",
            { "Fn::Join": [ "", [ "    response = client.start_build(projectName='", { "Ref": "ProjectName" }, "', sourceVersion=branch)"]]},
            "    print('Build Triggered')",
            "    return True"
          ]]}
        },
        "Description": { "Fn::Join": [ " ", [ "Process Github notifications for", { "Ref": "CodeRepoUrl" }]]},
        "FunctionName": { "Fn::Join": [ "-", [ "github-hook", { "Ref": "ProjectName" }]]},
        "Handler": "index.lambda_handler",
        "Role": { "Fn::GetAtt" : [ "LambdaIAMRole", "Arn" ] },
        "Runtime": "python2.7",
        "Timeout": 60
      }
    },
    "SNSHookUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": { "Fn::Join": [ "", [ "github-", { "Ref": "ProjectName" }, "-sns-user"]]},
        "Policies": [{
          "PolicyName": { "Fn::Join": [ "", [ "github-", { "Ref": "ProjectName" }, "-sns-policy"]]},
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [ "sns:Publish" ],
                "Resource": [
                  { "Fn::Join": [ "", [ "arn:aws:sns:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":", { "Fn::GetAtt" : [ "LambdaGitSNS", "TopicName" ] }]]}
                ],
                "Effect": "Allow"
              }
            ]
          }
        }]
      }
    },
    "SNSHookUserKey": {
       "Type": "AWS::IAM::AccessKey",
       "Properties": {
          "UserName": { "Fn::Join": [ "", [ "github-", { "Ref": "ProjectName" }, "-sns-user"]]}
       },
       "DependsOn": [ "SNSHookUser" ]
    }
  },
  "Outputs" : {
    "AccessKey" : {
      "Description" : "The User AccessKey",
      "Value" : { "Ref": "SNSHookUserKey" }
    },
    "SecretKey" : {
      "Description" : "The User SecretAccessKey",
      "Value" : { "Fn::GetAtt" : [ "SNSHookUserKey", "SecretAccessKey" ] }
    }
  }
}
